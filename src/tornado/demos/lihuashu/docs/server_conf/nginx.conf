##用户 用户组
user www-data;

##工作进程
worker_processes 2;

##错误日志
error_log  /home/sites/logs/nginx_error.log;
##pid文件位置
pid        /var/run/nginx.pid;


events {
	use   epoll;
	##工作进程的最大连接数量
	worker_connections  1024;
}


http {

    # reserve 8MB under the name 'proxied' to track uploads
    upload_progress proxied 8m;
    upload_progress_json_output;

	#Enumerate all the Tornado servers here
	upstream frontends{
	server 127.0.0.1:8000;
	server 127.0.0.1:8001;
	}


    include       mime.types;
    default_type  application/octet-stream;
   ##日志的格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
   ##访问日志
    access_log  /home/sites/logs/nginx_access.log;


	keepalive_timeout 65;
	types_hash_max_size 2048;

	proxy_read_timeout 200;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";
	gzip_min_length 1000;
	gzip_proxied any;

	gzip_types text/plain text/css text/xml
		   application/x-javascript application/xml
		   application/atom+xml text/javascript;

#Only retry if there was a communication error,not a timeout
#on the Tornado server(to avoid propagating"queries of death"
#to all frontends)
proxy_next_upstream error;


    #上传文件大小限制设置
    client_max_body_size 50m;
    ##根据实际情况调整，如果server很多，就调整大一点
    #server_names_hash_bucket_size 512;
			

    #禁止IP访问
    server {

            #监听的端口
            listen 80 default;
		    server_name _;
		    rewrite ^(.*) http://localhost$1 permanent;
    }

    server {
	server_name .lihuashu.com;
	rewrite ^(.*) http://localhost$1 permanent;
    }

    #第1个虚拟主机
    server {
            #监听的端口
            listen 80;
	    	#上传文件大小限制设置
	    	client_max_body_size 50m;
   	    	#主机名称
            server_name localhost;
	    	charset utf-8;
            
	    	#web访问日志文件路径
            access_log /home/sites/logs/lhs_access.log combined;
            #默认首页文件，匹配顺序从左到右
            index index.html index.htm;



	#	location / {
	#	include uwsgi_params;
	#	uwsgi_param UWSGI_PYHOME /home/sites/lihuashu.com/pyenv/;
		##uwsgi_pass 的相关配置必须和启动uwsgi时的一致！
	#	uwsgi_pass 127.0.0.1:9000;

		#index index.html index.htm;

		##UWSGI_CHDIR是指程序所在的目录
		#uwsgi_param UWSGI_CHDIR /home/sites/nackshop.com/;
	#	uwsgi_param UWSGI_CHDIR /home/sites/lihuashu.com/;
		##UWSGI_SCRIPT是指启动哪个程序（注意，这里必须去掉py后缀）
	#	uwsgi_param UWSGI_SCRIPT application;
	#	}

		location ~ ^/static/(apps|uploads|images|javascripts|styles)/ {
	            root /home/sites/lihuashu.com;
		    if ($query_string){
        	    expires max;
		    }
        	}
		location = /favicon.ico {
			rewrite (.*) /static/favicon.ico;
		}

		location = /robots.txt {
			rewrite (.*) /static/robots.txt;
		}

		location / {
			proxy_pass_header Server;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Scheme $scheme;
			proxy_pass_header Set-Cookie;
			proxy_pass http://frontends;
			proxy_next_upstream error;
		}


		# 上传页面会把文件上传到这个location
        location ^~ /upload/ {
        #设置body最大值为5m
        client_max_body_size    5m;

        # 文件上传以后转给后端的Python代码去处理
        upload_pass /service/upload/;

        # 上传限速，如果设置为0则表示不限制
        upload_limit_rate 200k;

        # 上传的文件临时存储位置
        #upload_store /dev/shm;
        upload_store /tmp/upload_temp_dir;
        
        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";


        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.sha1" "$upload_file_sha1";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        upload_pass_form_field "^.*$";

		upload_pass_args off;

        upload_cleanup 400 404 499 500-505;

        #此url需要跟踪进度信息，该信息在上传完成后会保留30秒
        track_uploads proxied 30s;

        }

        location ^~ /upload_progress/ {
        	#此url来获取进度信息
        	upload_progress_json_output;
        	report_uploads proxied;
        }

            #网页文件存放的目录
            root /home/sites/lihuashu.com;
			
			error_page   500 502 503 504  /50x.html;
			location = /50x.html {
			root   html;
			}

	#	location  ~* \.(wma|wmv|asf|mp3|mmf|zip|rar|jpg|gif|png|swf|flv)$ {
	#
	#	     valid_referers none blocked .lihuashu.com;
	#
	#	     if ($invalid_referer) {
	#
	#	     #rewrite ^/ http://www.lihuashu.com/403.html;
	#
	#	     return 403;
	#
	#	      }
	#
	#	}

	#	#对rar、gif以及zip格式的文件进行防盗链设置
	#	location ~* \.(rar|zip|gif|png|jpg)$ {
	#		#来路域名
	#		valid_referers none blocked localhost;
	#		#进行判断，如果不是来路域名则显示错误图片。
    #        if ($invalid_referer) {
    #             #rewrite ^/ /static/media/img/login_logo.png;
    #             return 404; #直接返回404
    #         }
    # }

    }

    #第2个虚拟主机
#    server {
#            #监听的端口
#            listen 80;
#            #主机名称
#            server_name .nackshop.com;
#	    charset utf-8;
#            
#	    #web访问日志文件路径
#            access_log /home/sites/logs/nackshopcom_access.log combined;
#			
#            #默认首页文件，匹配顺序从左到右
#            index index.html index.htm;
#
#		location / {
#		include uwsgi_params;
#		uwsgi_param UWSGI_PYHOME /home/sites/nackshop.com/pyenv;
#		##uwsgi_pass 的相关配置必须和启动uwsgi时的一致！
#		uwsgi_pass 127.0.0.1:9000;
#
#		##UWSGI_CHDIR是指程序所在的目录
#		uwsgi_param UWSGI_CHDIR /home/sites/nackshop.com;
#		##UWSGI_SCRIPT是指启动哪个程序（注意，这里必须去掉py后缀）
#		uwsgi_param UWSGI_SCRIPT application;
#		}
#
#	        location /static/{
#                    root /home/sites/nackshop.com/static;
#                    expires 30s;
#                }
#             #网页文件存放的目录
#             root /home/sites/nackshop.com;
#			
#			error_page   500 502 503 504  /50x.html;
#			location = /50x.html {
#			root   html;
#			}
#    }
    #include /usr/local/nginx/conf/*.conf;
}

